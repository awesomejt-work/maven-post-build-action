name: SemVer Release Version
description: Utilized for creating releases of projects

# Inputs
inputs:
  github_token:
    description: "GitHub Token"
    required: true
  gpg_passphrase:
    description: "GPG Passphrase"
    required: true
  gpg_key:
    description: "GPG Key"
    required: true
  ossrh_username:
    description: "OSSRH USERNAME"
    required: true
  ossrh_token:
    description: "OSSRH Token"
    required: true


runs:
  using: "composite"
  steps:
     - name: Checkout Repository
       uses: actions/checkout@v4
    
     - name: Setup Java
       uses: actions/setup-java@v4
       with:
            distribution: 'zulu'
            java-version: '21'
            server-id: ossrh
            server-username: MAVEN_USERNAME
            server-password: MAVEN_CENTRAL_TOKEN
            gpg-private-key: ${{inputs.gpg_key}}
            gpg-passphrase: MAVEN_GPG_PASSPHRASE

     - name: Maven Build
       shell: bash
       run: |
          ./mvnw clean install -U \
            --batch-mode \
            -e \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
            -Dmaven.build.cache.enabled=false \
            -Prelease-enforcement
    
     - name: Publish To OSSRH (Maven Central Staging)
       shell: bash
       run: |
            ./mvnw deploy -U\
                  --batch-mode \
                  -e \
                  -U \
                  -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                  -DskipTests \
                  -DskipITs \
                  -Dmaven.main.skip \
                  -Dmaven.test.skip \
                  -DrepositoryId=ossrh \
                  -DrepositoryIdOSSRH='true' \
                  -PstageOSSRH \
                  -Dmaven.build.cache.enabled=false
       env:
          MAVEN_USERNAME: ${{ inputs.ossrh_username }}
          MAVEN_CENTRAL_TOKEN: ${{ inputs.ossrh_token }}
          MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg_passphrase }}

     - name: Create Release
       shell: bash
       run: |
              curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{inputs.github_token}}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{github.repository}}/releases \
                -d '{"tag_name":"${{github.ref_name}}","name":"Release ${{github.ref_name}}","body":"Release ${{github.ref_name}}","draft":false,"prerelease":false,"generate_release_notes":false}'
